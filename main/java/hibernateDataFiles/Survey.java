package hibernateDataFiles;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * Surveys generated by hbm2java
 */
@Entity
@Table(name = "surveys", schema = "edi_ms")
public class Survey implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private long surveyId;
	private String umn;
	private String firstName;
	private String middleName;
	private String lastName;
	private String phoneNumber;
	private Date creationDate;
	private Long shortFeedbackGrade;
	private String shortFeedbackComment;
	private List<MemberAnswer> memberAnswers = new ArrayList<MemberAnswer>(0);
	private List<CategoryAnswer> categoriesAnswers = new ArrayList<CategoryAnswer>(0);

	public Survey() {
	}

	public Survey(long surveyId, String firstName, String lastName, String phoneNumber, Date creationDate) {
		this.surveyId = surveyId;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phoneNumber = phoneNumber;
		this.creationDate = creationDate;
	}

	public Survey(long surveyId, String umn, String firstName, String middleName, String lastName, String phoneNumber,
			Date creationDate, Long shortFeedbackGrade, String shortFeedbackComment,
			List<MemberAnswer> memberAnswers, List<CategoryAnswer> categoriesAnswer) {
		this.surveyId = surveyId;
		this.umn = umn;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.phoneNumber = phoneNumber;
		this.creationDate = creationDate;
		this.shortFeedbackGrade = shortFeedbackGrade;
		this.shortFeedbackComment = shortFeedbackComment;
		this.memberAnswers = memberAnswers;
		this.categoriesAnswers = categoriesAnswer;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "survey_id_seq")
	@SequenceGenerator(allocationSize = 1, name = "survey_id_seq", sequenceName = "EDI_MS.survey_id_seq")
	@Id

	@Column(name = "survey_id", unique = true, nullable = false)
	public long getSurveyId() {
		return this.surveyId;
	}

	public void setSurveyId(long surveyId) {
		this.surveyId = surveyId;
	}

	@Column(name = "umn", length = 15)
	public String getUmn() {
		return this.umn;
	}

	public void setUmn(String umn) {
		this.umn = umn;
	}

	@Column(name = "first_name", nullable = false, length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middle_name", length = 20)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "last_name", nullable = false, length = 20)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "phone_number", nullable = false, length = 15)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 29)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "short_feedback_grade")
	public Long getShortFeedbackGrade() {
		return this.shortFeedbackGrade;
	}

	public void setShortFeedbackGrade(Long shortFeedbackGrade) {
		this.shortFeedbackGrade = shortFeedbackGrade;
	}

	@Column(name = "short_feedback_comment", length = 500)
	public String getShortFeedbackComment() {
		return this.shortFeedbackComment;
	}

	public void setShortFeedbackComment(String shortFeedbackComment) {
		this.shortFeedbackComment = shortFeedbackComment;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "survey")
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	public List<MemberAnswer> getMemberAnswers() {
		return this.memberAnswers;
	}

	public void setMemberAnswers(List<MemberAnswer> membersAnswers) {
		this.memberAnswers = membersAnswers;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "survey")
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	public List<CategoryAnswer> getCategoriesAnswers() {
		return this.categoriesAnswers;
	}
	
	public void setCategoriesAnswers(List<CategoryAnswer> categoriesAnswers) {
		this.categoriesAnswers = categoriesAnswers;
	}

}
